name: Update Docker Image and Sync to Gitee

on:
  schedule:
    - cron: '*/45 * * * *'  # 每五分钟触发一次
  workflow_dispatch:  # 允许手动触发

jobs:
  sync-docker-images:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Fetch latest Home Assistant version
      id: get_version
      run: |
        LATEST_VERSION=$(curl -s https://raw.githubusercontent.com/home-assistant/version/master/stable.json | jq -r '.supervisor')
        echo "Latest version is: $LATEST_VERSION"
        echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

    - name: Fetch Gitee existing version
      id: fetch_gitee_version
      run: |
        # 获取 Gitee 中保存的版本号
        GITEE_VERSION=$(curl -s -H "Authorization: token ${{ secrets.GITEE_TOKEN }}" \
        "https://gitee.com/api/v5/repos/smarthomefans/supervisor-cn/contents/version.json" | jq -r '.content' | base64 -d | jq -r '.supervisor')

        echo "Gitee version is: $GITEE_VERSION"
        echo "GITEE_VERSION=$GITEE_VERSION" >> $GITHUB_ENV

    - name: Compare Versions
      id: compare_versions
      run: |
        if [ "${{ env.LATEST_VERSION }}" == "${{ env.GITEE_VERSION }}" ]; then
          echo "No new version available."
          echo "::set-output name=new_version::false"
        else
          echo "New version available."
          echo "::set-output name=new_version::true"
        fi

    - name: Pull aarch64 Docker Image
      if: steps.compare_versions.outputs.new_version == 'true'
      run: |
        docker pull ghcr.io/home-assistant/aarch64-hassio-supervisor:${{ env.LATEST_VERSION }}
        docker save ghcr.io/home-assistant/aarch64-hassio-supervisor:${{ env.LATEST_VERSION }} -o aarch64_supervisor_${{ env.LATEST_VERSION }}.tar

    - name: Pull amd64 Docker Image
      if: steps.compare_versions.outputs.new_version == 'true'
      run: |
        docker pull ghcr.io/home-assistant/amd64-hassio-supervisor:${{ env.LATEST_VERSION }}
        docker save ghcr.io/home-assistant/amd64-hassio-supervisor:${{ env.LATEST_VERSION }} -o amd64_supervisor_${{ env.LATEST_VERSION }}.tar

    - name: Delete Old Tar Files on Gitee
      if: steps.compare_versions.outputs.new_version == 'true'
      run: |
        # 删除旧的 aarch64 和 amd64 tar 文件
        curl -X DELETE -H "Authorization: token ${{ secrets.GITEE_TOKEN }}" \
        -d '{"message": "delete old tar files", "branch": "main"}' \
        "https://gitee.com/api/v5/repos/smarthomefans/supervisor-cn/contents/aarch64_supervisor_${{ env.GITEE_VERSION }}.tar"
        
        curl -X DELETE -H "Authorization: token ${{ secrets.GITEE_TOKEN }}" \
        -d '{"message": "delete old tar files", "branch": "main"}' \
        "https://gitee.com/api/v5/repos/smarthomefans/supervisor-cn/contents/amd64_supervisor_${{ env.GITEE_VERSION }}.tar"

    - name: Upload New aarch64 Tar File to Gitee
      if: steps.compare_versions.outputs.new_version == 'true'
      run: |
        # 上传新的 aarch64 tar 文件到 Gitee
        NEW_TAR_PATH="aarch64_supervisor_${{ env.LATEST_VERSION }}.tar"
        curl -X POST -H "Authorization: token ${{ secrets.GITEE_TOKEN }}" \
        -F "access_token=${{ secrets.GITEE_TOKEN }}" \
        -F "file=@aarch64_supervisor_${{ env.LATEST_VERSION }}.tar" \
        "https://gitee.com/api/v5/repos/smarthomefans/supervisor-cn/contents/${NEW_TAR_PATH}"

    - name: Upload New amd64 Tar File to Gitee
      if: steps.compare_versions.outputs.new_version == 'true'
      run: |
        # 上传新的 amd64 tar 文件到 Gitee
        NEW_TAR_PATH="amd64_supervisor_${{ env.LATEST_VERSION }}.tar"
        curl -X POST -H "Authorization: token ${{ secrets.GITEE_TOKEN }}" \
        -F "access_token=${{ secrets.GITEE_TOKEN }}" \
        -F "file=@amd64_supervisor_${{ env.LATEST_VERSION }}.tar" \
        "https://gitee.com/api/v5/repos/smarthomefans/supervisor-cn/contents/${NEW_TAR_PATH}"

    - name: Update Version File on Gitee
      if: steps.compare_versions.outputs.new_version == 'true'
      run: |
        # 更新 Gitee 上的版本号信息文件
        echo '{"supervisor": "'${{ env.LATEST_VERSION }}'"}' > version.json
        curl -X PUT -H "Authorization: token ${{ secrets.GITEE_TOKEN }}" \
        -d '{"content":"'$(base64 version.json)'", "message": "update supervisor version to '${{ env.LATEST_VERSION }}'", "branch": "main"}' \
        "https://gitee.com/api/v5/repos/smarthomefans/supervisor-cn/contents/version.json"
