name: Upload Docker Image Tar to Gitee Release

on:
  schedule:
    - cron: '*/5 * * * *'  # 每五分钟触发一次
  workflow_dispatch:  # 允许手动触发

jobs:
  upload-docker-image:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Fetch latest Home Assistant version
      id: get_version
      run: |
        LATEST_VERSION=$(curl -s https://raw.githubusercontent.com/home-assistant/version/master/stable.json | jq -r '.supervisor')
        echo "Latest version is: $LATEST_VERSION"
        echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

    - name: Create or get existing Gitee Release
      id: create_release
      run: |
        # 检查是否存在对应的 Release
        RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITEE_TOKEN }}" \
          "https://gitee.com/api/v5/repos/smarthomefans/supervisor-cn/releases/tags/${{ env.LATEST_VERSION }}")
        
        # 如果 Release 不存在，则创建一个新的
        if echo "$RESPONSE" | grep -q '"message":"Not Found"'; then
          echo "Release not found, creating new one..."
          curl -X POST -H "Authorization: token ${{ secrets.GITEE_TOKEN }}" \
            -d "{\"tag_name\": \"${{ env.LATEST_VERSION }}\", \"name\": \"Version $LATEST_VERSION\", \"body\": \"Release for supervisor version $LATEST_VERSION\"}" \
            "https://gitee.com/api/v5/repos/smarthomefans/supervisor-cn/releases"
        else
          echo "Release already exists."
        fi

    - name: Pull and save aarch64 Docker Image
      run: |
        docker pull ghcr.io/home-assistant/aarch64-hassio-supervisor:${{ env.LATEST_VERSION }}
        docker save ghcr.io/home-assistant/aarch64-hassio-supervisor:${{ env.LATEST_VERSION }} -o aarch64_supervisor_${{ env.LATEST_VERSION }}.tar

    - name: Pull and save amd64 Docker Image
      run: |
        docker pull ghcr.io/home-assistant/amd64-hassio-supervisor:${{ env.LATEST_VERSION }}
        docker save ghcr.io/home-assistant/amd64-hassio-supervisor:${{ env.LATEST_VERSION }} -o amd64_supervisor_${{ env.LATEST_VERSION }}.tar

    - name: Upload aarch64 Tar to Gitee Release
      run: |
        # 获取 Release ID
        RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITEE_TOKEN }}" \
          "https://gitee.com/api/v5/repos/smarthomefans/supervisor-cn/releases/tags/${{ env.LATEST_VERSION }}" | jq -r '.id')

        # 上传文件到 Release
        curl -X POST -H "Authorization: token ${{ secrets.GITEE_TOKEN }}" \
          -F "name=aarch64_supervisor_${{ env.LATEST_VERSION }}.tar" \
          -F "file=@aarch64_supervisor_${{ env.LATEST_VERSION }}.tar" \
          "https://gitee.com/api/v5/repos/smarthomefans/supervisor-cn/releases/${RELEASE_ID}/assets"

    - name: Upload amd64 Tar to Gitee Release
      run: |
        # 获取 Release ID
        RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITEE_TOKEN }}" \
          "https://gitee.com/api/v5/repos/smarthomefans/supervisor-cn/releases/tags/${{ env.LATEST_VERSION }}" | jq -r '.id')

        # 上传文件到 Release
        curl -X POST -H "Authorization: token ${{ secrets.GITEE_TOKEN }}" \
          -F "name=amd64_supervisor_${{ env.LATEST_VERSION }}.tar" \
          -F "file=@amd64_supervisor_${{ env.LATEST_VERSION }}.tar" \
          "https://gitee.com/api/v5/repos/smarthomefans/supervisor-cn/releases/${RELEASE_ID}/assets"
